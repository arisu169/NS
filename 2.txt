// program to generate cipher text and recover the plaintext using Hill cipher
import java.util.Scanner;
public class HillCipher {
 private static final int[][] keyMatrix = {{2, 4, 5}, {9, 2, 1}, {3, 17, 7}};
 private static final int[][] inverseKeyMatrix = {{15, 17, 20}, {20, 9, 8}, {9, 3, 2}};
 private static final int MOD = 26;
 public static String encrypt(String text) {
 text = text.toUpperCase().replaceAll("[^A-Z]", "");
 while (text.length() % 3 != 0) text += "X";

 StringBuilder result = new StringBuilder();
 for (int i = 0; i < text.length(); i += 3) {
 int[] vector = {text.charAt(i) - 'A', text.charAt(i + 1) - 'A', text.charAt(i + 2) - 'A'};
 for (int row = 0; row < 3; row++) {
 int sum = 0;
 for (int col = 0; col < 3; col++) {
 sum += keyMatrix[row][col] * vector[col];
 }
 result.append((char) ((sum % MOD) + 'A'));
 }
 }
 return result.toString();
 }
 public static String decrypt(String text) {
 StringBuilder result = new StringBuilder();
 for (int i = 0; i < text.length(); i += 3) {
 int[] vector = {text.charAt(i) - 'A', text.charAt(i + 1) - 'A', text.charAt(i + 2) - 'A'};
 for (int row = 0; row < 3; row++) {
 int sum = 0;
 for (int col = 0; col < 3; col++) {
 sum += inverseKeyMatrix[row][col] * vector[col];
 }
 result.append((char) ((sum % MOD + MOD) % MOD + 'A'));
 }
 }
 return result.toString();
 }
 public static void main(String[] args) {
 Scanner scanner = new Scanner(System.in);
 System.out.print("Enter text: ");
 String text = scanner.nextLine();
 String encrypted = encrypt(text);
 System.out.println("Encrypted: " + encrypted);
 System.out.println("Decrypted: " + decrypt(encrypted));
 }
}
/* output:-
Enter text: hello world
Encrypted: HEKGTJVPSFSP
Decrypted: JWRVZZUXKFSZ */
