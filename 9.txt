//9) program to implement triple DES-Decrypt method

import javax.crypto.*;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;

public class Simple3DesDecrypt {
    public static void main(String[] args) throws Exception {
        String originalText = "Hello World"; // Message to encrypt
        String key = "123456789012345678901234"; // 24-byte key required for 3DES

        // Encrypt
        Cipher encryptCipher = Cipher.getInstance("DESede/ECB/PKCS5Padding");
        SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), "DESede");
        encryptCipher.init(Cipher.ENCRYPT_MODE, secretKey);

        byte[] encryptedBytes = encryptCipher.doFinal(originalText.getBytes());
        String encryptedBase64 = Base64.getEncoder().encodeToString(encryptedBytes);
        System.out.println("Encrypted: " + encryptedBase64);

        // Decrypt
        Cipher decryptCipher = Cipher.getInstance("DESede/ECB/PKCS5Padding");
        decryptCipher.init(Cipher.DECRYPT_MODE, secretKey);

        byte[] decryptedBytes = decryptCipher.doFinal(Base64.getDecoder().decode(encryptedBase64));
        String decryptedText = new String(decryptedBytes);
        System.out.println("Decrypted: " + decryptedText);
    }
}

/* output:-
Encrypted: KOv5AR/GXqs4JSGbnhUMLg==
Decrypted: Hello World
*/
